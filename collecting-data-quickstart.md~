## Quick start

1. **Power and boot** the Sparrow system box, connect the ethernet port to your laptop with an ethernet cable (RJ45 connector, you'll need an ethernet port or dongle for your laptop)
2. **SSH** into the Ubuntu OS running on the Sparrow's ARM core with `ssh casper@10.10.11.99`, enter the password, "casper", when prompted. The Sparrow's ARM is configured to statically assign it's Eth0 interface to the `10.10.11.99` ipv4 address. If you have trouble with the next two step you may need to configure you're laptop's wired ethernet interface manually to be on the 10.10.xx.xx subnet (subnet mask 255.255.0.0, with an IP address e.g. 10.10.11.55)
3. **Mount a hard drive** connected over usbA port to this mountpoint: `/media/BASEBAND` with this command `sudo mount /dev/<your HD partition e.g. sda2> /media/BASEBAND`. Then run `lsblk` to identify connected hard drives (Sparrow only supports ext4 formated hard drives). Make sure that the HDD's mounted partition has a `/baseband` directory.
4. Enter the data acquisition directory using the aliased shortcut `daq` (you should now have cd'd into `/home/casper/sparrow-albatros/software`).
5. Edit the `config.ini` configuration file to suit your needs.
6. Run the DAQ in sudo by executing `sudo ./rundaq.sh`.

That's it! 

### Checking and troubleshooting

- Verify that baseband is writing to `/media/BASEBAND/baseband`, that on-board-correlated data is writing to `/home/casper/data_auto_cross`, and that logs are writing to `/home/casper/logs`. 
- If baseband is not writing, open up Wireshark on your laptop and snoop on your wired connection in promiscuous mode. If baseband is dumping correctly you'll be met with a deluge of UDP packets. Look at one of those UDP packets and make sure the UDP payload is not all zeros. You should be weary if there are too many zeros, the data is almost incompressible (i.e. very high entropy).  
- To verify the integrity of your signal, use -X port forwarding and run `python livespec.py 0 125` (in the `daq` directory). 

## In Depth
If you're going to modify the code it's good to know how it all sticks together. 



TODO: everything below here needs to be deleted/adapted to explain what rundaq.sh does instead

